// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  name      String @unique
  password  String
  habit     Habit[]
  session   Session[]
  userGroup UserGroup[]
  group     Group[]
  allow     Allow[]
  userEvent UserEvent[]

  @@map("user")
}
model Habit {
  id       Int    @id @default(autoincrement())
  title    String 
  day      Int
  begin    String
  end      String
  size     Int
  floor   Int
  user     User   @relation(fields:[userId],references:[id])
  userId   Int
  color    String @default("blue")

  @@map("habit")
}
model Session {
  id       Int    @id @default(autoincrement())
  token    String @unique
  user     User   @relation(fields:[userId],references:[id])
  userId   Int

  @@map("session")
}
model Group{
  id        Int    @id @default(autoincrement())
  name      String
  userGroup UserGroup[]
  alow      Allow[]
  event     Event[]

  creator    User    @relation(fields:[creatorId],references:[id])
  creatorId Int

  @@unique([name,creatorId])
  @@map("group")
}
model UserGroup {
  id      Int     @id @default(autoincrement())
  user    User    @relation(fields:[userId],references:[id])
  userId  Int
  group   Group   @relation(fields:[groupId],references:[id])
  groupId Int
  acepted Boolean @default(false)

  color   String  @default("orange")

  @@unique([userId,groupId])
  @@map("userGroup")
}
model Allow {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields:[userId],references:[id])
  userId   Int
  group     Group   @relation(fields:[groupId],references:[id])
  groupId   Int
  color     String
  tag      String @default("")

  @@unique([userId,groupId,color])
  @@map("allow")
}
model Event {
  id       Int    @id @default(autoincrement())
  title    String 
  day      Int
  begin    String
  end      String
  size     Int
  floor     Int

  group     Group   @relation(fields:[groupId],references:[id])
  groupId   Int
  userEvent UserEvent[]

  @@unique([groupId,title])
  @@map("event")
}
model UserEvent {
  id      Int     @id @default(autoincrement())
  user    User    @relation(fields:[userId],references:[id])
  userId  Int
  event   Event   @relation(fields:[eventId],references:[id])
  eventId Int

  @@unique([userId,eventId])
  @@map("userEvent")
}
